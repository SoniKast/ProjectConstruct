<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goku_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

 // States &amp; Flags:
    x_speed  = 0;                      // Horizontal speed.
    x_real   = 0;                      // Real horizontal speed, used for sub pixel movement.
    x_handle = 0;                      // Used to store the x_speed.
    
  // Y Speed
    y_speed  = 0;                      // Vertical speed.
    y_real   = 0;                      // Real vertical speed, used for sub pixel movement.
    y_handle = 0;                      // Used to store the y_speed.    
    wall_hug = 0;
    
  // Player 
    player_state       = S_NORMAL;
    player_direction   = D_FRONT;
    chosen_character   = P_GOKU;
    player_transformed = false;
    player_fused       = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Input setup.

    fs_instance_input_setup();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite &amp; Animation setup.

    fs_instance_animation_setup(null);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision handling.
    
    fs_instance_collision_handle();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Receive input.

    fs_instance_input_receive();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement.
    
    fs_character_movement();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attacks

switch(global.hud_option)
{
    case 0:
        if(button_b[input.press])
        {
            switch(player_direction)
            {
                case D_BACK:
                    player_state = S_SPECIAL1;
                    if(anim_sprite = spr_goku_back_sp1)
                    {
                        x_speed = 0;
                        y_speed = 0;
                    }
                    if(input_special_count mod 2 == 0)
                    {
                        anim_frame = 1;   
                        anim_speed = 0;
                    }
                    if(input_special_count mod 2 == 1)
                    {
                        anim_frame = 0;
                        anim_speed = 0;
                    }
                    if(instance_number(obj_blast) &lt; 3)
                    {
                        with(instance_create(x, y, obj_blast))
                        {
                            image_angle = 90;
                            y_speed -= 2;
                        }
                    }
                break;
                case D_FRONT:
                    player_state = S_SPECIAL1;
                    if(anim_sprite = spr_goku_front_sp1)
                    {
                        x_speed = 0;
                        y_speed = 0;
                    }
                    if(input_special_count mod 2 == 0)
                    {
                        anim_frame = 1;   
                        anim_speed = 0;
                    }
                    if(input_special_count mod 2 == 1)
                    {
                        anim_frame = 0;
                        anim_speed = 0;
                    }
                    if(instance_number(obj_blast) &lt; 3)
                    {
                        with(instance_create(x, y, obj_blast))
                        {
                            image_angle = 270;
                            y_speed += 2;
                        }
                    }
                break;
                case D_LEFT:
                    player_state = S_SPECIAL1;
                    if(anim_sprite = spr_goku_left_sp1)
                    {
                        x_speed = 0;
                        y_speed = 0;
                    }
                    if(input_special_count mod 2 == 0)
                    {
                        anim_frame = 1;  
                        anim_speed = 0; 
                    }
                    if(input_special_count mod 2 == 1)
                    {
                        anim_frame = 0;
                        anim_speed = 0;
                    }
                    if(instance_number(obj_blast) &lt; 3)
                    {
                        with(instance_create(x, y, obj_blast))
                        {
                            image_xscale = -1;
                            x_speed -= 2;
                        }
                    }
                break;
                case D_RIGHT:
                    player_state = S_SPECIAL1;
                    if(anim_sprite = spr_goku_right_sp1)
                    {
                        x_speed = 0;
                        y_speed = 0;
                    }
                    if(input_special_count mod 2 == 0)
                    {
                        anim_frame = 1;   
                        anim_speed = 0;
                    }
                    if(input_special_count mod 2 == 1)
                    {
                        anim_frame = 0;
                        anim_speed = 0;
                    }
                    if(instance_number(obj_blast) &lt; 3)
                    {
                        with(instance_create(x, y, obj_blast))
                        {
                            image_xscale = 1;
                            x_speed += 2;
                        }
                    }
                break;
            }
        }
    break;
    case 2:
        if(global.super_counter = 7 &amp;&amp; player_transformed == false)
        {
            if(button_b[input.hold])
            {
                player_state = S_TRANSFORM1;
            }
        }
        
        if(global.super_counter = 0 or global.super_counter &lt; 7)
        {
            if(button_b[input.press] &amp;&amp; player_transformed == false)
            {
                player_state       = S_NORMAL;
                player_transformed = false;
            }
        }
        
        if(player_transformed == true &amp;&amp; global.super_counter = 7)
        {
            if(button_b[input.press])
            {
                player_state = S_NORMAL;
            }
        }
        if(button_b[input.press] &amp;&amp; player_transformed == true)
        {
            player_transformed = false;
            player_state       = S_NORMAL;
        }
    break;
}

if(global.super_counter &lt; 7)
{
    global.super_counter += 0.01;   
}
else 
{
    global.super_counter += 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop at walls.

    x_speed = 0;
    y_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Loop/Reset or Switch animation.

    switch(anim_sprite)
    {
       case spr_goku_front:
       case spr_goku_back:
       case spr_goku_left:
       case spr_goku_right:
            anim_frame = 0;
       break;
       
       case spr_goku_front_walk:
       case spr_goku_back_walk:
       case spr_goku_left_walk:
       case spr_goku_right_walk:
            anim_frame = 0;
       break;
       
       case spr_goku_front_sp1:
       case spr_goku_back_sp1:
       case spr_goku_left_sp1:
       case spr_goku_right_sp1:
            anim_frame = 2;
       break;
       
       case spr_sgoku_front:
       case spr_sgoku_back:
       case spr_sgoku_left:
       case spr_sgoku_right:
            anim_frame = 0;
       break;
       
       case spr_sgoku_front_walk:
       case spr_sgoku_back_walk:
       case spr_sgoku_left_walk:
       case spr_sgoku_right_walk:
            anim_frame = 0;
       break;
       
       case spr_sgoku_front_sp1:
       case spr_sgoku_back_sp1:
       case spr_sgoku_left_sp1:
       case spr_sgoku_right_sp1:
            anim_frame = 0;
       break;
       
       default:
       break;                              
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw character.

 // Change animation:
 
 // Knight:
    switch(chosen_character)
    {
        case P_GOKU:
            switch(anim_direction)
            {
                case D_FRONT:
                    switch(player_state)
                    {
                        // Standing:
                        case S_NORMAL:
                            fs_instance_animation_set(spr_goku_front, 0, 0, true, true);
                        break;
                        
                        // Walk:
                        case S_WALK:
                            fs_instance_animation_set(spr_goku_front_walk, 8, 4, true, true);
                        break;
                        
                        // Run:
                        case S_RUNNING:
                            fs_instance_animation_set(spr_goku_front_walk, 8, 4, true, true);
                        break;
                        
                        // Attack:
                        /*
                        case S_ATTACK:
                            fs_instance_animation_set(spr_goku_, 15, 3, true, false);
                        break;
                        */
                        
                        // Special 1:
                        case S_SPECIAL1:
                            fs_instance_animation_set(spr_goku_front_sp1, 5, 2, false, true);
                        break;
                        /*
                        // Special 2:
                        case S_SPECIAL2:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        
                        // Special 3:
                        case S_SPECIAL3:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        */
                    }
                break;
                case D_BACK:
                    switch(player_state)
                    {
                        // Standing:
                        case S_NORMAL:
                            fs_instance_animation_set(spr_goku_back, 0, 0, true, true);
                        break;
                        
                        // Walk:
                        case S_WALK:
                            fs_instance_animation_set(spr_goku_back_walk, 8, 4, true, true);
                        break;
                        
                        // Run:
                        case S_RUNNING:
                            fs_instance_animation_set(spr_goku_back_walk, 8, 4, true, true);
                        break;
                        
                        // Attack:
                        /*
                        case S_ATTACK:
                            fs_instance_animation_set(spr_goku_, 15, 3, true, false);
                        break;
                        */
                        
                        // Special 1:
                        case S_SPECIAL1:
                            fs_instance_animation_set(spr_goku_back_sp1, 5, 2, false, true);
                        break;
                        /*
                        // Special 2:
                        case S_SPECIAL2:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        
                        // Special 3:
                        case S_SPECIAL3:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        */
                    }
                break;
                case D_RIGHT:
                    switch(player_state)
                    {
                        // Standing:
                        case S_NORMAL:
                            fs_instance_animation_set(spr_goku_right, 0, 0, true, true);
                        break;
                        
                        // Walk:
                        case S_WALK:
                            fs_instance_animation_set(spr_goku_right_walk, 8, 4, true, true);
                        break;
                        
                        // Run:
                        case S_RUNNING:
                            fs_instance_animation_set(spr_goku_right_walk, 8, 4, true, true);
                        break;
                        
                        // Attack:
                        /*
                        case S_ATTACK:
                            fs_instance_animation_set(spr_goku_, 15, 3, true, false);
                        break;
                        */
                        
                        // Special 1:
                        case S_SPECIAL1:
                            fs_instance_animation_set(spr_goku_right_sp1, 5, 2, false, true);
                        break;
                        /*
                        // Special 2:
                        case S_SPECIAL2:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        
                        // Special 3:
                        case S_SPECIAL3:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        */
                    }
                break;
                case D_LEFT:
                    switch(player_state)
                    {
                        // Standing:
                        case S_NORMAL:
                            fs_instance_animation_set(spr_goku_left, 0, 0, true, true);
                        break;
                        
                        // Walk:
                        case S_WALK:
                            fs_instance_animation_set(spr_goku_left_walk, 8, 4, true, true);
                        break;
                        
                        // Run:
                        case S_RUNNING:
                            fs_instance_animation_set(spr_goku_left_walk, 8, 4, true, true);
                        break;
                        
                        // Attack:
                        /*
                        case S_ATTACK:
                            fs_instance_animation_set(spr_goku_, 15, 3, true, false);
                        break;
                        */
                        
                        // Special 1:
                        case S_SPECIAL1:
                            fs_instance_animation_set(spr_goku_left_sp1, 5, 2, false, true);
                        break;
                        /*
                        // Special 2:
                        case S_SPECIAL2:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        
                        // Special 3:
                        case S_SPECIAL3:
                            fs_instance_animation_set(char_knight_anim.hurt, 15, 3, true, false);
                        break;
                        */
                    }
                break;
            }
        break;
    }
    
    if(dpad_left[input.hold])  { anim_direction = D_LEFT; }
    if(dpad_right[input.hold]) { anim_direction = D_RIGHT; }       
    if(dpad_up[input.hold])    { anim_direction = D_BACK; }
    if(dpad_down[input.hold])  { anim_direction = D_FRONT; }
  
 // Animation playback. (To Switch/Update or loop a animation, see event_user 0.
    fs_instance_animation_playback();
    
 // Draw sprite.
    fs_instance_draw();
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
